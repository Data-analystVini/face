# -*- coding: utf-8 -*-
"""p k mean(customer segmentation).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yaSbwywh99gFrLtKnXQ1l14rvtjqs7NT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from  sklearn.cluster import KMeans

from google.colab import files
files.upload()

customer_data=pd.read_csv('Mall_Customers.csv')
customer_data

customer_data.head()

customer_data.shape

#getting some information about the dataset
customer_data.info()

customer_data.describe()

customer_data.isnull().sum()

"""**Choosing the annual income column and spending score column**"""

X=customer_data.iloc[:,[3,4]].values

print(X)

"""**Choosing the Number of clusters**



**WCSS->within Clusters sum of squares**
"""

#finding wcss value for different number of clusters
wcss=[]

for i in range(1,11):
    kmeans=KMeans(n_clusters=i,init='k-means++',random_state=42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

#plot an elbow graph
sns.set()
plt.plot(range(1,11),wcss)
plt.title('The Elbow point Graph')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

"""optimum number of clusters=5


training the K-means Clustering Model
"""

kmeans=KMeans(n_clusters=5,init='k-means++',random_state=0)
#return a label for each data point based on their cluster
Y=kmeans.fit_predict(X)

print(Y)

"""clusters=0,1,2,3,4
visualizing all the clusters **bold text**
"""

#plotting all the clusters
plt.figure(figsize=(8,8))
plt.scatter(X[Y==0,0],X[Y==0,1],s=50,c='green',label='Cluster 1')
plt.scatter(X[Y==1,0],X[Y==1,1],s=50,c='red',label='Cluster 2')
plt.scatter(X[Y==2,0],X[Y==2,1],s=50,c='purple',label='Cluster 3')
plt.scatter(X[Y==3,0],X[Y==3,1],s=50,c='black',label='Cluster 4')
plt.scatter(X[Y==4,0],X[Y==4,1],s=50,c='blue',label='Cluster 5')

#plot the centroids
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=100,c='cyan',label='centroids')
plt.title('Customer Group')
plt.xlabel('Annual Income')
plt.show()